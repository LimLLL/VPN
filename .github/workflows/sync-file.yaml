name: Sync File

on:
  schedule:
    - cron: "0 0 * * *" # 每天零点执行一次
  workflow_dispatch:

jobs:
  sync-file:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout this repository
        uses: actions/checkout@v2

      # - name: Define files to fetch
      #   run: |
      #     echo "files=https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Microsoft.list Microsoft.list,https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/netflix.yaml netflix.yaml,https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/netflix.yaml netflix-geoip.yaml,https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/paypal.yaml paypal.yaml,https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/spotify.yaml spotify.yaml" >> $GITHUB_ENV

      # - name: Fetch files
      #   run: |
      #     IFS=',' read -ra ADDR <<< "${{ env.files }}"
      #     for file in "${ADDR[@]}"; do
      #       url=$(echo $file | cut -d' ' -f1)
      #       local_path=$(echo $file | cut -d' ' -f2)
      #       echo "Fetching $url..."
      #       if curl -o "$local_path" "$url"; then
      #         echo "Successfully fetched $url"
      #       else
      #         echo "Failed to fetch $url. Skipping update."
      #       fi
      #     done

      - name: Fetch files
        run: |
          mkdir -p geo
          mkdir -p pure_text_ip
          while IFS= read -r line; do
            url=$(echo "$line" | cut -d' ' -f1)
            local_path=$(echo "$line" | cut -d' ' -f2)
            echo "Fetching $url..."
            if wget -O "$local_path" "$url"; then
              echo "Successfully fetched $url"
            else
              echo "Failed to fetch $url. Skipping update."
            fi
          done < fetch_url.txt

      - name: Marge all file but exclude cn.txt
        run: |
          git clone --branch=release https://github.com/Loyalsoldier/geoip /tmp/geoip
          cp /tmp/geoip/text/* pure_text_ip/
          rm -f pure_text_ip/cn.txt
          rm -f pure_text_ip/all.txt
          cat pure_text_ip/*.txt > pure_text_ip/all.txt

      - name: Commit and push changes
        run: |
          git config --local user.email "lim@useforall.top"
          git config --local user.name "limlll"
          git add .
          git commit -m "Update files from other repositories" || echo "No changes to commit"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
